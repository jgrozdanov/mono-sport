// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Drawing;
using MonoTouch.Foundation;
using MonoTouch.UIKit;


namespace SportNet
{
	public partial class LiveScoreViewController : UIViewController
	{
		public LiveScoreViewController (IntPtr handle) : base (handle)
		{
		}
		public override void ViewWillAppear (bool animated)
		{
			this.navBar.SetBackgroundImage (UIImage.FromFile ("./Assets/navbar.png"), 
			                                                   MonoTouch.UIKit.UIBarMetrics.Default);
			this.SportImage.Image =  UIImage.FromFile("./Assets/football-icon.png");
			this.SportImageToday.Image = UIImage.FromFile ("./Assets/football-icon.png");
			this.SwitchTo.Frame = new RectangleF(0, 44, 640, 504);
			this.SwitchTo.ContentSize=new SizeF (640, 504);
			this.SwitchTo.ScrollEnabled = false;
			this.SwitchTo.ContentOffset = (new PointF (320, 0));
			var events = new LiveScoreCellModel[] {
				new LiveScoreCellModel() { TeamOne = "Botev Pd", TeamTwo = "Loko Pd", Result = "1:1", TimeIndicator = -1, StartTime = "19;00" },
				new LiveScoreCellModel() { TeamOne = "Botev Pd", TeamTwo = "Loko Pd", Result = "2:2", TimeIndicator = 68, StartTime = "19;00" },
				new LiveScoreCellModel() { TeamOne = "Botev Pd", TeamTwo = "Loko Pd", Result = "3:3", TimeIndicator = 68, StartTime = "19;00" },
				new LiveScoreCellModel() { TeamOne = "Botev Pd", TeamTwo = "Loko Pd", Result = "4:4", TimeIndicator = 0, StartTime = "19;00" },
				new LiveScoreCellModel() { TeamOne = "Botev Pd", TeamTwo = "Loko Pd", Result = "5:5", TimeIndicator = -1, StartTime = "19;00" },
				new LiveScoreCellModel() { TeamOne = "Litex L", TeamTwo = "Real Madrid", Result = "6:6", TimeIndicator = 38, StartTime = "19;00" },
				new LiveScoreCellModel() { TeamOne = "Levski Sf", TeamTwo = "CSKA Sf", Result = "7:7", TimeIndicator = 18, StartTime = "19;00" },
				new LiveScoreCellModel() { TeamOne = "West Ham United", TeamTwo = "West Ham United", Result = "8:8", TimeIndicator = -1, StartTime = "19;00" },
				new LiveScoreCellModel() { TeamOne = "Botev Pd", TeamTwo = "Loko Pd", Result = "9:9", TimeIndicator = -1, StartTime = "19;00" },
				new LiveScoreCellModel() { TeamOne = "Botev Pd", TeamTwo = "Loko Pd", Result = "10:10", TimeIndicator = 68, StartTime = "19;00" },
				new LiveScoreCellModel() { TeamOne = "Botev Pd", TeamTwo = "Loko Pd", Result = "11:11", TimeIndicator = 0, StartTime = "19;00" },
				new LiveScoreCellModel() { TeamOne = "Botev Pd", TeamTwo = "Loko Pd", Result = "12:12", TimeIndicator = 68, StartTime = "19;00" },
				new LiveScoreCellModel() { TeamOne = "Botev Pd", TeamTwo = "Loko Pd", Result = "13:13", TimeIndicator = -1, StartTime = "19;00" },
				new LiveScoreCellModel() { TeamOne = "Litex L", TeamTwo = "Real Madrid", Result = "14:14", TimeIndicator = 38, StartTime = "19;00" },
				new LiveScoreCellModel() { TeamOne = "Levski Sf", TeamTwo = "CSKA Sf", Result = "15:15", TimeIndicator = 18, StartTime = "19;00" },
				new LiveScoreCellModel() { TeamOne = "West Ham United", TeamTwo = "West Ham United", Result = "16:16", TimeIndicator = 0, StartTime = "19;00" }

			};
			//this.TodayTable.Frame = new RectangleF (340, 90, 280, 320);
			this.TodayTable.ShowsVerticalScrollIndicator = false;
			this.TodayTable.Source = new TodayTableSource (events);
			this.TodayTable.BackgroundColor=  UIColor.FromRGB (26, 26, 26);
			this.YesterdayTable.Source = new YesterdayTableSource (events);
			this.YesterdayTable.BackgroundColor=  UIColor.FromRGB (26, 26, 26);
			this.YesterdayTable.ShowsVerticalScrollIndicator = false;

			var customOne = new UIButton (new RectangleF (0, 0, 26, 26));
			customOne.SetBackgroundImage(UIImage.FromFile("./Assets/yesterday.png"), UIControlState.Normal);
			customOne.TouchUpInside += (sender, e) => {
				PointF yesterday = new PointF(0,0);
				this.SwitchTo.SetContentOffset(yesterday,true);
			};
			var customTwo = new UIButton (new RectangleF (0, 0, 26, 26));
			customTwo.SetBackgroundImage(UIImage.FromFile("./Assets/today.png"), UIControlState.Normal);
			customTwo.TouchUpInside += (sender, e) => {
				PointF yesterday = new PointF(320,0);
				this.SwitchTo.SetContentOffset(yesterday,true);
			};


			this.Yesterday.CustomView = customOne;
			this.Today.CustomView = customTwo;
		}
	}
}
