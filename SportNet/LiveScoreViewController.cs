// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Drawing;
using System.Collections.Generic;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using SportNet.Web.Models;
using SportNet.Web.Models.LiveScore;
using Newtonsoft.Json;

namespace SportNet
{
	public partial class LiveScoreViewController : UIViewController
	{
		public LiveScoreViewController (IntPtr handle) : base (handle)
		{
		}
		
		public override void ViewWillAppear (bool animated)
		{
			this.DateToday.Text = DateTime.Now.ToLongDateString();

			this.SportImageToday.Image = UIImage.FromFile ("./Assets/football-icon.png");
			this.SwitchTo.Frame = new RectangleF(0, 44, 640, 504);
			this.SwitchTo.ContentSize=new SizeF (640, 504);
			this.SwitchTo.ScrollEnabled = false;

			var request = new RestRequest ();
			request.RequestFinished += (object sender, RequestEndedArgs e) => {
				InvokeOnMainThread(delegate {
					var data = (LiveScoreViewModel)JsonConvert.DeserializeObject(e.Result, typeof(LiveScoreViewModel));
					this.TodayTable.Source = new TodayTableSource(data);
					this.TodayTable.ReloadData();
				});
			};
			request.Send (string.Format (RequestConfig.LiveScore, 0, 0), "GET");

			this.TodayTable.ShowsVerticalScrollIndicator = false;
			this.TodayTable.BackgroundColor=  UIColor.FromRGB (26, 26, 26);

			this.SwitchCategory.SetBackgroundImage (UIImage.FromFile ("./Assets/dropdown.png"), UIControlState.Normal);

			request = new RestRequest ();
			request.RequestFinished += (object sender, RequestEndedArgs e) => {
				InvokeOnMainThread(delegate {
					var data = (List<LiveScoreSportModel>)JsonConvert.DeserializeObject(e.Result, typeof(List<LiveScoreSportModel>));
					this.Categories.Source = new SwitchCategorySource(data, TodayTable);
					this.Categories.ReloadData();
				});
			};
			request.Send (RequestConfig.LiveScoreSports, "GET");

			if(((AppDelegate)UIApplication.SharedApplication.Delegate).IsSeven) {
				this.AutomaticallyAdjustsScrollViewInsets = false;	
			}
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			this.SwitchCategory.TouchUpInside += (object sender, EventArgs e) => {
				if(this.Categories.Hidden) {
					this.Categories.Alpha = 0;
					this.Categories.Hidden = false;
					UIView.Animate(0.25, 0, UIViewAnimationOptions.CurveEaseInOut,
					               () => this.Categories.Alpha = 1,
					               () => this.Categories.Hidden = false);
				}
				else {
					this.Categories.Alpha = 1;
					UIView.Animate(0.25, 0, UIViewAnimationOptions.CurveEaseInOut,
					               () => this.Categories.Alpha = 0,
					               () => this.Categories.Hidden = true);
				}
			};
		}
	}
}
