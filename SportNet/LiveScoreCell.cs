// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Drawing;
using MonoTouch.Foundation;
using MonoTouch.UIKit;

namespace SportNet
{
	public partial class LiveScoreCell : UITableViewCell
	{
		public UILabel teams;
		public UILabel result;
		public UILabel timeIndicator;
		public UIImageView loader;
		public UIImageView separatingLine;

		private string t1;
		private string t2;

		public LiveScoreCell (NSString cellId) : base(UITableViewCellStyle.Default, cellId)
		{
			SelectionStyle = UITableViewCellSelectionStyle.None;

			base.LayoutSubviews ();

			teams = new UILabel ();
			teams.TextColor = UIColor.White;
			teams.Font = UIFont.FromName ("Helvetica-Bold", 12f);
			teams.BackgroundColor = UIColor.Clear;
			teams.Lines = 1;

			timeIndicator = new UILabel ();
			timeIndicator.TextColor = UIColor.FromRGB (102, 102, 102);
			timeIndicator.Font = UIFont.FromName ("Helvetica", 12f);
			timeIndicator.BackgroundColor = UIColor.Clear;

			loader = new UIImageView ();
			loader.ContentMode = UIViewContentMode.ScaleAspectFill;
			loader.ClipsToBounds = true;

			result = new UILabel ();
			result.TextColor = UIColor.White;
			result.Font = UIFont.FromName ("Helvetica-Bold", 12f);
			result.BackgroundColor = UIColor.Clear;

			separatingLine = new UIImageView ();
			separatingLine.ContentMode = UIViewContentMode.ScaleAspectFill;
			separatingLine.ClipsToBounds = true;

			ContentView.Add (teams);
			ContentView.Add (result);
			ContentView.Add (loader);
			ContentView.Add (result);
			ContentView.Add (timeIndicator);
			ContentView.Add (separatingLine);
		}

		public void SetLiveScoreCell(string teamOne,string teamTwo, string result, string state, string starttime)
		{
			// we need these for the layout
			t1 = teamOne;
			t2 = teamTwo;

			this.teams.Text = teamOne + " - " + teamTwo;
	
			this.result.Text = result;

			int n;
			if (int.TryParse (state.Substring(0,1), out n)) {
				if (state.Length >= 3) {
					state = state.Substring (0, 3);
				}

				this.timeIndicator.TextColor = UIColor.Red;
				this.timeIndicator.Text = state + "'";
				this.loader.AnimationImages = new UIImage[] {
					UIImage.FromFile("./Assets/loader1.png"),
					UIImage.FromFile("./Assets/loader2.png"),
					UIImage.FromFile("./Assets/loader3.png"),
					UIImage.FromFile("./Assets/loader4.png"),
					UIImage.FromFile("./Assets/loader5.png"),
					UIImage.FromFile("./Assets/loader6.png"),
					UIImage.FromFile("./Assets/loader7.png"),
					UIImage.FromFile("./Assets/loader8.png"),
				};
				this.loader.AnimationRepeatCount = 0;
				this.loader.AnimationDuration = 1;
				this.loader.StartAnimating ();
				this.loader.Hidden = false;
			} 
			else if (state == "Finished" || state == "Ended") {
				this.timeIndicator.Text = "Finished";
				this.timeIndicator.TextColor = UIColor.FromRGB (102, 102, 102);
				this.loader.Hidden = true;
			} 
			else if (state == "Not started") {
				this.timeIndicator.Text = starttime;
				this.timeIndicator.TextColor = UIColor.FromRGB (102, 102, 102);
				this.loader.Hidden = true;
			} 
			else {
				this.timeIndicator.Text = state;
				this.timeIndicator.TextColor = UIColor.FromRGB (102, 102, 102);
				this.loader.Hidden = true;
			}

			this.separatingLine.Image = UIImage.FromFile ("./Assets/divider.png");
		}

		public override void LayoutSubviews ()
		{
			this.ContentView.BackgroundColor = UIColor.FromRGB (26, 26, 26);
			timeIndicator.Frame = new RectangleF (8, 15, 50, 16);  
			loader.Frame = new RectangleF(33, 12, 22, 22);

			var teamsText = (NSString)teams.Text;
			var teamsTextSize = teamsText.GetSizeUsingAttributes (new UIStringAttributes ());

			// two line label
			if (teamsTextSize.Width > 160) {
				teams.Lines = 2;
				teams.Text = t1 + " -\n" + t2;
				teams.Frame = new RectangleF (68, 8, 160, 30);
				teams.SizeToFit ();
			} 
			else {
				teams.Frame = new RectangleF (68, 16, 160, 16);
			}

			result.Frame = new RectangleF(ContentView.Bounds.Width-80, 18, 40, 12);
			separatingLine.Frame = new RectangleF (0,ContentView.Bounds.Height - 1, 285, 1);

		}
	}
}
