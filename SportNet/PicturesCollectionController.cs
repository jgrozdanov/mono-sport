// This file has been autogenerated from a class added in the UI designer.

using System;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using System.Drawing;

namespace SportNet
{
	public partial class PicturesCollectionController : UICollectionViewController
	{
		public string[] ImageSources { get; set; }
		public string HeadLine { get; set; }
		public string NumberOfPictures { get; set; }

		public PicturesCollectionController (IntPtr handle) : base (handle)
		{

		}
		public override void ViewWillAppear (bool animated)
		{
			base.ViewWillAppear (animated);
			CollectionView.RegisterClassForCell (typeof(PictureCollectionCell), PictureCollectionCell.CellId);
			this.CollectionView.BackgroundColor = UIColor.FromRGB (26, 26, 26);
			this.CollectionView.AllowsMultipleSelection = false;

			var button = new UIBarButtonItem ("Back", UIBarButtonItemStyle.Plain, null);
			var custom = new UIButton (new RectangleF (0, 0, 26, 15));
			custom.SetBackgroundImage(UIImage.FromFile("./Assets/back.png"), UIControlState.Normal);
			custom.TouchUpInside += (sender, e) => NavigationController.PopViewControllerAnimated (true);
			button.CustomView = custom;

			this.NavigationItem.LeftBarButtonItem = button;
		}
		public override UICollectionViewCell GetCell (UICollectionView collectionView, NSIndexPath indexPath)
		{
			var cell = (PictureCollectionCell)collectionView.DequeueReusableCell (PictureCollectionCell.CellId, indexPath);
			cell.Image = UIImage.FromFile ("./Assets/profilebig.png");
			return cell;
		}
		public override UICollectionReusableView GetViewForSupplementaryElement (UICollectionView collectionView, NSString elementKind, NSIndexPath indexPath)
		{
//			PictureHeaderVIew headerView = new PictureHeaderVIew ();
//			headerView.BackgroundColor = UIColor.Red;
//			return headerView;
			if (elementKind == (NSString)"UICollectionElementKindSectionHeader") {
				PictureHeaderVIew header = (PictureHeaderVIew)collectionView.DequeueReusableSupplementaryView 
					(UICollectionElementKindSection.Header, (NSString)"header", indexPath);
				header.title.Text = HeadLine;
				header.title.SizeToFit ();
				header.SizeToFit ();
				header.photo.Image = UIImage.FromFile ("./Assets/photo.png");
				header.picturesCount.Text = NumberOfPictures;
				float height = header.title.Frame.Height;

				return header;
			} else {
				StartReadingView footer = (StartReadingView)collectionView.DequeueReusableSupplementaryView 
					(UICollectionElementKindSection.Footer, (NSString)"collectionfooter", indexPath);
				footer.StartReading.SetBackgroundImage (UIImage.FromFile ("./Assets/buttonlong.png"), UIControlState.Normal);
				footer.StartReading.TouchUpInside += (object sender, EventArgs e) => {
					UIStoryboard board = UIStoryboard.FromName ("MainStoryboard", null);
					var prefs = (PreferencesSubController)board.InstantiateViewController ("preferencessub");
					this.NavigationController.PushViewController(prefs, true);
				};
				return footer;
			}
		
		}
		public override void ItemSelected (UICollectionView collectionView, NSIndexPath indexPath)
		{
			AppDelegate appDelegate = (AppDelegate)UIApplication.SharedApplication.Delegate;
			UIStoryboard board = UIStoryboard.FromName ("MainStoryboard", null);
			PictureBigCollectionController bigPicture = (PictureBigCollectionController)board.InstantiateViewController ("pictureBigCollectionController");
			bigPicture.Title = string.Format ("{0}/{1}", indexPath.Row+1, NumberOfPictures);
			bigPicture.ImageSources = ImageSources;
			((MainTabController)UIApplication.SharedApplication.Delegate.Window.RootViewController).
				Pictures.InternalTopNavigation.PushViewController (bigPicture,true);

		}
		public override int GetItemsCount (UICollectionView collectionView, int section)
		{
			return ImageSources.Length;
		}
	}
}
